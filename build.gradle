/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

buildscript {
    String rootGroupId = project.ext.rootGroupId = "name.remal.gradle-plugins.${rootProject.name}"
    String rootArtifactId = project.ext.rootArtifactId = rootProject.name
    String rootSnapshotVersion = project.ext.rootSnapshotVersion = '1-SNAPSHOT'
    dependencies {
        //classpath("$rootGroupId:$rootArtifactId:$rootSnapshotVersion") { version { strictly(rootSnapshotVersion) } }
        classpath 'name.remal.gradle-plugins.toolkit:build-logic:0.66.3'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

allprojects {
    group = project.rootGroupId
    version = project.rootSnapshotVersion
}

apply plugin: 'name.remal.toolkit.build-logic'

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

subprojects {
    pluginManager.withPlugin('maven-publish') {
        publishing.publications.withType(MavenPublication).configureEach {
            artifactId = "${rootProject.name}-${project.name}"
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-gradle-plugin'
apply plugin: 'name.remal.generate-sources'

dependencies {
    optional project(':api')

    compileOnly 'org.ow2.asm:asm-util'

    implementation 'org.ow2.asm:asm-tree'


    testImplementation 'org.ow2.asm:asm-util'
    testImplementation 'com.google.jimfs:jimfs:1.3.0'
}

gradlePlugin {
    plugins {
        'name.remal.build-time-constants.jvm' {
            id = 'name.remal.build-time-constants.jvm'
            implementationClass = 'name.remal.gradle_plugins.build_time_constants.jvm.BuildTimeConstantsJvmPlugin'
            displayName = 'Insert compile-time constants into JVM class files'
            description = property('repository-description')
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

tasks.named('generateJava') {
    Provider<MavenPublication> publication = provider {
        project(':api').publishing.publications.withType(MavenPublication).collect().first()
    }
    Provider<String> group = provider { publication.get().groupId }
    Provider<String> artifactId = provider { publication.get().artifactId }
    Provider<String> version = provider { publication.get().version }
    inputs.property('groupId', group)
    inputs.property('artifactId', artifactId)
    inputs.property('version', version)
    classFile(project.calculateBaseJavaPackage() + '.jvm', 'BuildTimeConstantsApiBuildInfo') {
        it.writePackage()
        it.println("")
        it.writeImport("org.jetbrains.annotations.ApiStatus.Internal")
        it.println("")
        it.println("@Internal")
        it.writeBlock("interface ${it.simpleName}") {
            it.println("String BUILD_TIME_CONSTANTS_API_GROUP = \"${it.escapeJava(group.get())}\";")
            it.println("String BUILD_TIME_CONSTANTS_API_ARTIFACT_ID = \"${it.escapeJava(artifactId.get())}\";")
            it.println("String BUILD_TIME_CONSTANTS_API_VERSION = \"${it.escapeJava(version.get())}\";")
        }
    }
}
