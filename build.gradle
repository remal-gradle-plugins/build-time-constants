/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

buildscript {
    String rootGroupId = project.ext.rootGroupId = "name.remal.gradle-plugins.${rootProject.name}"
    String rootArtifactId = project.ext.rootArtifactId = rootProject.name
    String rootSnapshotVersion = project.ext.rootSnapshotVersion = '2-SNAPSHOT'
    dependencies {
        //classpath("$rootGroupId:$rootArtifactId:$rootSnapshotVersion") { version { strictly(rootSnapshotVersion) } }
        classpath 'name.remal.gradle-plugins.toolkit:build-logic:0.72.16'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

allprojects {
    group = project.rootGroupId
    version = project.rootSnapshotVersion
}

apply plugin: 'name.remal.toolkit.build-logic'

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

subprojects {
    pluginManager.withPlugin('maven-publish') {
        publishing.publications.withType(MavenPublication).configureEach {
            artifactId = "${rootProject.name}-${project.name}"
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-gradle-plugin'
apply plugin: 'name.remal.generate-sources'

dependencies {
    optional project(':api')
    optional 'org.ow2.asm:asm-util'

    implementation 'org.ow2.asm:asm-tree'


    testImplementation 'com.google.jimfs:jimfs:1.3.0'
}

gradlePlugin {
    plugins {
        'name.remal.build-time-constants' {
            id = 'name.remal.build-time-constants'
            implementationClass = 'name.remal.gradle_plugins.build_time_constants.BuildTimeConstantsPlugin'
            displayName = 'Insert build-time constants into JVM class files'
            description = property('repository-description')
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

Provider<MavenPublication> apiPublication = provider {
    project(':api').publishing.publications.withType(MavenPublication).collect().first()
}
Provider<String> apiGroup = project.ext['apiGroup'] = provider { apiPublication.get().groupId }
Provider<String> apiArtifactId = project.ext['apiArtifactId'] = provider { apiPublication.get().artifactId }
Provider<String> apiVersion = project.ext['apiVersion'] = provider { apiPublication.get().version }

project.ext['apiNotation'] = provider { "${apiGroup.get()}:${apiArtifactId.get()}:${apiVersion.get()}" }
project.ext['apiNotationWithoutVersion'] = provider { "${apiGroup.get()}:${apiArtifactId.get()}" }

generateSources.forMainSourceSet.java {
    inputs.property('groupId', apiGroup)
    inputs.property('artifactId', apiArtifactId)
    inputs.property('version', apiVersion)

    classFile(project.calculateBaseJavaPackage(), 'BuildTimeConstantsApiBuildInfo') {
        addImport("org.jetbrains.annotations.ApiStatus.Internal")

        line("@Internal")
        block("interface ${it.simpleName}") {
            line("String BUILD_TIME_CONSTANTS_API_GROUP = \"${escapeString(apiGroup.get())}\";")
            line("String BUILD_TIME_CONSTANTS_API_ARTIFACT_ID = \"${escapeString(apiArtifactId.get())}\";")
            line("String BUILD_TIME_CONSTANTS_API_VERSION = \"${escapeString(apiVersion.get())}\";")
        }
    }
}
